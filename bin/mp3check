#! /bin/bash

color() {
	echo -n "`tput setaf $1`${@:2}"
	# reset color if there are arguments:
	if [[ "$#" > 1 ]]; then tput sgr0; fi
}
red() { color 1 "$@"; }
green() { color 2 "$@"; }
yellow() { color 3 "$@"; }
cyan() { color 6 "$@"; }
reset() { tput sgr0; }

SCRIPTNAME=${0##*/}

help() {
	echo "\
Usage: `yellow $SCRIPTNAME` [options] <file|directory>

Check mp3 files for errors/warnings using ffprobe.
Files not ending in .mp3 will be skipped.

Options:
  `yellow -h, --help`     Show this help text
  `yellow -v, --verbose`  Verbose logging"
}

# no args
if [[ "$#" < 1 ]]; then help; exit 0; fi

# proactively check for args
for ARG in "$@"; do
  if [[ "$ARG" == "-v" || "$ARG" == "--v" ]]; then
    VERBOSE=true
  elif [[ "$ARG" == "-h" || "$ARG" == "--help" ]]; then
    help; exit 0
  else
    PATH_ARG="$ARG"
  fi
done

# no file/dir provided
if [[ "$PATH_ARG" == "" ]]; then
	help; exit 0
fi

if [[ -d "$1" ]]; then # is directory
	echo "Scanning files in directory $1"
	echo ""
  CHECKED=1
  SKIPPED=0

	for FILE in "$1"/*; do
		if [[ $FILE == *.mp3 ]]
		then
			echo "`green Checking` $FILE"
			ffprobe "${FILE}" -loglevel warning 2>&1
      CHECKED=$((CHECKED+1))
		else
			if [[ $VERBOSE == true ]]; then
				echo "`yellow Skipping` $FILE"
			fi
      SKIPPED=$((CHECKED+1))
		fi
	done
  echo ""
  echo "Checked ${CHECKED} files"
  echo "Skipped ${SKIPPED} files"
elif [[ -f "$1" ]]; then # is file
	FILE="$1"
	if [[ $FILE == *.mp3 ]]; then
		echo "`cyan Checking` $FILE"
		ffprobe "${FILE}" -loglevel warning 2>&1
	else
		echo "`red Unsupported file extension:` $FILE"
	fi
else
	echo "`red Argument is not a file or directory:` $1"
	exit 1
fi
