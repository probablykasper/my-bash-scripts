#! /bin/bash

color() {
    echo -n "`tput setaf $1`${@:2}"
    # reset color if there are arguments:
    if [[ "$#" > 1 ]]; then echo -n "`tput sgr0`"; fi
}
red() { color 1 "$@"; }
green() { color 2 "$@"; }
cyan() { color 6 "$@"; }
reset() { color 7 "$@"; echo -n `tput sgr0`; }

aerender='/Applications/Adobe After Effects 2020/aerender'

help() {
  SCRIPTNAME=${0##*/}
  echo "
`green Usage:`
  `cyan $SCRIPTNAME` [options] <file> [file...]
    
`green Options:`
  `cyan file`        .aep file for After Effects' aerender to render.
  `cyan -h, --help`  Show this help text
  `cyan -k, --kill`  Kill allaerendercore processes (they tend to get stuck).
              DO NOT use this if you have multiple renders running!
  "
}

# no args
if [[ "$#" < 1 ]]; then help; exit 0; fi

err() {
  echo `red âœ– Error:` "$1"
  sfx beep
  exit 1
}

# proactively check for errors and args
for ARG in "$@"; do
  if [[ "$ARG" == "-k" || "$ARG" == "--kill" ]]; then
    KILL=true
  elif [[ "$ARG" == "-h" || "$ARG" == "--help" ]]; then
    help; exit 0
  elif [[ ! -f "$ARG" ]]; then
    err "File does not exist: $ARG"
  elif [[ "$ARG" != *.aep ]]; then
    err "File must be .aep: $ARG"
  else
    FILE="$ARG"
  fi
done

# kill aerendercore processes and quit
if [[ $KILL == true && -z $FILE ]]; then
  echo "Killing all aerendercore processes..."
  killall aerendercore
  exit 0
fi

# render
echo ""
ABSOLUTE_FILE_PATH="$(cd "$(dirname "$FILE")" && pwd)/$(basename "$FILE")"
command "$aerender" -project "$ABSOLUTE_FILE_PATH" || err "Render failed: $ARG"

# kill aerendercore processes
if [[ $KILL == true ]]; then
  echo "Killing all aerendercore processes..."
  killall aerendercore
fi

sfx ding
